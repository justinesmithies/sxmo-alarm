#!/bin/sh
#
# Build and install git version of SXMO onto an Arch Arm barebones image.
# If run again it can be used to update the SXMO git packages and rebuild them without
# reinstalling everything else.
#
# To install and run:
# Copy sxmo-alarm somewhere in either the root of your home directory 
# or some other directory under your home on your Pinephone and
# chmod +x sxmo-alarm
# sudo ./sxmo-alarm from the directory that you installed it which will leave config.h.def files intact.
# Or sudo ./sxmo-alarm --force if you want to overwrite old config.h files.
#
# Justine Smithies - 27-02-2021

if ! [ $(id -u) = 0 ]; then
   echo "The script needs to be run as root." >&2
   exit 1
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
	echo "Usage: sxmo-alarm [options]">&2
	echo "Options: --force    Overwrite existing config.h">&2
	exit 0
elif [ "$1" = "-f" ] || [ "$1" = "--force" ]; then
	FORCE=1
else
	FORCE=0
fi

if [ $SUDO_USER ]; then
    real_user=$SUDO_USER
else
    real_user=$(whoami)
fi

# Commands that you don't want running as root would be invoked
# with: sudo -u $real_user
# So they will be run as the user who invoked the sudo command
# Keep in mind if the user is using a root shell (they're logged in as root),
# then $real_user is actually root
# sudo -u $real_user non-root-command

# Commands that need to be ran with root would be invoked without sudo
# root-command

sudo -u $real_user mkdir -p build-sxmo-dev || exit 1

cd build-sxmo-dev || exit 1

echo "Updating Arch Arm.">&2

pacman -Syu --noconfirm

echo "Installing build dependencies.">&2

pacman -S --needed --noconfirm --disable-download-timeout xorg-server libxft libxinerama webkit2gtk linux-headers fontconfig freetype2 libxext libinput ncurses base-devel git bc busybox  xdg-user-dirs cmake icu libphonenumber go
pacman -S --needed --noconfirm --disable-download-timeout xcalib xorg-xrandr xorg-xsetroot xorg-xdm xorg-xmodmap xorg-xset xorg-xprop xdotool xsel xorg-xinput xorg-xcalc xclip xf86-input-synaptics xf86-video-fbdev xorg-xdpyinfo
pacman -S --needed --noconfirm --disable-download-timeout wget ttf-dejavu alsa-utils autocutsel inotify-tools sxiv vis pulseaudio pulseaudio-alsa conky megapixels feh dunst modemmanager ffmpeg geoclue mediainfo
pacman -S --needed --noconfirm --disable-download-timeout firefox mobile-config-firefox terminus-font highlight xcursor-themes youtube-dl screen mpv dnsmasq sdl2 bluez bluez-utils scrot

# Build and install yay from AUR

if pacman -Qs yay ; then
	echo "Yay is already installed.">&2
else
	echo "Installing yay.">&2
	sudo -u $real_user git clone https://aur.archlinux.org/yay-bin.git
	cd yay-bin
	sudo -u $real_user makepkg -s --noconfirm
	pacman -U --noconfirm yay-bin-*
	cd ..
fi

# Install Fira Mono fonts                                                                                                                                                                   
mkdir -p /usr/share/fonts/OTF                                                                                                                                                               
sudo -u $real_user mkdir -p /home/$real_user/build-sxmo-dev/FiraMono                                                                                                                        
cd /home/$real_user/build-sxmo-dev/FiraMono                                                                                                                                                 
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/FiraMono.zip                                                                                                          
sudo -u $real_user unzip -o FiraMono.zip                                                                                                                                                    
cp -f *.otf /usr/share/fonts/OTF                                                                                                                                                            
sudo -u $real_user fc-cache                                                                                                                                                                 
rm *.zip                                                                                                                                                                                    
cd /home/$real_user/build-sxmo-dev

# Install sfeed from AUR

echo "Installing sfeed.">&2
if pacman -Qs sfeed ; then
	echo "Sfeed is already installed.">&2
else
	sudo -u $real_user git clone https://aur.archlinux.org/sfeed-git.git
	cd sfeed-git
	sed -i "s@arch=('i686' 'x86_64' 'armv6h' 'armv7h')@arch=('i686' 'x86_64' 'armv6h' 'armv7h' 'aarch64')@g" PKGBUILD
	sudo -u $real_user makepkg -s --noconfirm
	pacman -U --noconfirm --overwrite="*" sfeed-git-*
	cd ..
fi

# Copy in essential files for Arch Arm build

# Create sxmo-pinephone.service

if [ ! -f /etc/systemd/system/sxmo-pinephone.service ]; then
    cat > "/etc/systemd/system/sxmo-pinephone.service" <<EOF
[Unit]
Description=sxmo-pinephone

[Service]
ExecStart=/usr/bin/sxmo_setpermissions.sh

[Install]
WantedBy=multi-user.target
EOF
fi

# For audio to work

if [ ! -f /etc/asound.conf ]; then
     cat > "/etc/asound.conf" <<EOF
pcm.!default {
    type hw
    card 0
}

ctl.!default {
    type hw
    card 0
}
EOF
fi

# Fetch and build required SXMO packages

repos="~mil/sxmo-utils ~mil/sxmo-dwm ~mil/sxmo-dmenu ~mil/lisgd ~mil/sxmo-surf ~mil/sxmo-st ~proycon/svkbd ~proycon/clickclack ~mil/sxmo-xdm-config Orange-OpenSource/pn ~anjan/mnc"

for repo in $repos; do
	echo "Obtaining $repo...">&2
	repodir="$(basename "$repo")"
	if [ -d "$repodir" ]; then
		cd "$repodir" || exit 1
		git pull --ff-only || exit 1
	else
		git clone "https://git.sr.ht/$repo" || git clone "https://github.com/$repo" || exit 1
		cd "$repodir" || exit 1
	fi
	echo "Building $repo...">&2
	if [ -f config.def.h ]; then
		if [ $FORCE -eq 1 ] || [ ! -f config.h ]; then
			cp -f config.def.h config.h
		else
			echo "(leaving old config.h untouched, this could lead to errors: run sudo ./sxmo-alarm --force if you want to overwrite old config.h files)">&2
		fi
	fi
	if [ "$repo" = "~anjan/mnc" ]; then
		go build mnc.go || exit 1
		sudo cp -f mnc /usr/bin || exit 1
	else
		make || cmake -DCMAKE_INSTALL_PREFIX=/usr . && make . || exit 1
		sudo make PREFIX=/usr install || exit 1
	fi
	if [ "$repo" = "~mil/sxmo-utils" ]; then
        systemctl enable sxmo-pinephone.service
	elif [ "$repo" = "~mil/sxmo-xdm-config" ]; then
		if systemctl is-active --quiet xdm.service; then
           echo "XDM Service is already running.">&2
        else
           echo "Enabling XDM Service.">&2
           systemctl enable xdm.service
        fi
		
	fi
	cd .. || exit 1
done

cd .. || exit 1

# Move config files into correct directories for Arch Arm


cp /usr/lib/X11/xdm/Xsession /etc/X11/xdm/
cp /usr/lib/X11/xdm/Xsetup_0 /etc/X11/xdm/
cp /usr/lib/X11/xdm/GiveConsole /etc/X11/xdm/
cp /usr/share/X11/xorg.conf.d/90-monitor.conf /etc/X11/xorg.conf.d/

# Housekeeping

sed -i "s/#HandlePowerKey=poweroff/HandlePowerKey=ignore/" /etc/systemd/logind.conf
systemctl enable ModemManager
systemctl enable bluetooth

# E.g. hide the cursor for Xorg

sed -i 's@:0 local /usr/bin/X :0  -nolisten tcp@:0 local /usr/bin/X -nolisten tcp -nocursor :0@g' /etc/X11/xdm/Xservers

# Fix upgrade menu to use yay

sed -i 's@echo "Updating all packages from repositories"@@g' /usr/bin/sxmo_upgrade.sh
sed -i 's@sudo apk update@@g' /usr/bin/sxmo_upgrade.sh
sed -i 's@sudo apk upgrade@yay -Syu@g' /usr/bin/sxmo_upgrade.sh

# Fix sxmo_timezonechange.sh to use arch command timedatectl

sed -i 's@sudo setup-timezone -z@sudo timedatectl set-timezone@g' /usr/bin/sxmo_timezonechange.sh

# Create required directories in users directory

sudo -u $real_user mkdir -p /home/$real_user/.config/sxmo
sudo -u $real_user mkdir -p /home/$real_user/.config/sxmo/userscripts
sudo -u $real_user mkdir -p /home/$real_user/.config/sxmo/hooks

echo "Finished please reboot your Pinephone.">&2
exit 0


